
// ---------------------AssertJ-------------------------//
//plugins {
//    id "org.assertj.generator" version "0.0.6b"
//}
//
//sourceSets {
//    main {
//        //must specify assertj block to have it applied
//        assertJ { }
//    }
//}
//
//assertJ {
//    // default: generated-srcs/${SOURCE_SET_NAME_TAG}/java
//    outputDir = "src-gen/${SOURCE_SET_NAME_TAG}/java"
//}
//------------------------------------------------------//


ext {
    junitVersion = '5.4.2'
    restAssuredVersion = '4.0.0'
    jacksonDatabindVersion = '2.9.5'
    allureRestAssuredVersion = '2.7.0'
}

dependencies {

    //JUnit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    //compile used in all module: code and tests
    compile "io.rest-assured:rest-assured:$restAssuredVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    compile "io.qameta.allure:allure-rest-assured:$allureRestAssuredVersion"
    //slf4j
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "ch.qos.logback:logback-core:1.2.3"

    compile "org.aeonbits.owner:owner:1.0.10"
    compile "com.github.javafaker:javafaker:0.18"

    compile "org.assertj:assertj-core:3.12.2"
    compile "io.qameta.allure:allure-assertj:2.12.1"
}

test {

    //for JUnit5
    useJUnitPlatform()

    //turn off gradle optimization for not rerun tests
    //if turned off gradle will run all tests always when: ./gradlew test
    test.outputs.upToDateWhen {false}

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }

    //to be able to use properties: ./gradlew test -Denv=stage
    systemProperties System.getProperties()
}

allure {
    version = '2.5.0'
    aspectjweaver = true
    configuration = 'compile'

    useJUnit5 {
        version = '2.7.0'
    }
}